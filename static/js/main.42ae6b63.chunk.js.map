{"version":3,"sources":["logo.svg","components/login/loginForm.js","components/pages/sider.js","components/pages/index.js","components/login/login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FormItem","Layout","Header","Footer","Sider","Content","Form","Item","NormalLoginForm","e","preventDefault","data","this","props","form","getFieldsValue","name","password","localStorage","setItem","onLoginCallback","message","error","getFieldDecorator","window","innerHeight","innerWidth","className","style","display","flex","paddingLeft","onSubmit","handleSubmit","rules","required","initialValue","size","prefix","type","color","placeholder","trigger","htmlType","React","Component","WrapForm","create","SubMenu","Menu","ItemGroup","handleClick","console","log","getValue","key","item","children","state","onClick","onChange","width","height","overflow","minWidth","defaultSelectedKeys","defaultOpenKeys","mode","title","menu","target","rel","href","Page1","value","valueTxt","val","setState","textAlign","fontWeight","span","backgroundColor","marginRight","icon","overlay","cursor","bind","marginLeft","paddingRight","LoginApp","isLogin","flexDirection","paddingTop","src","logo","alt","store","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.42ae6b63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/**\r\n * Created by liulinqiang on 2018/7/3.\r\n */\r\n \r\nimport React from \"react\"\r\nimport axios from \"axios\"\r\n// import PropTypes from \"proptypes\"\r\n//import '../data/user'\r\nimport { Layout,message,Form, Icon, Input, Button, Checkbox, Alert} from 'antd';\r\n// import { isAbsolute } from \"path\";\r\n// import {Provider,connect} from 'react-redux'\r\n// import store from '../../redux/store'\r\n// require('../../styles/login.scss')\r\n// require('../mock/mock')\r\nconst { Header, Footer, Sider, Content } = Layout;\r\nconst FormItem = Form.Item;\r\nclass NormalLoginForm extends React.Component {\r\n    constructor(){\r\n        super();\r\n    }\r\n    componentWillMount() {\r\n\r\n    }\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        let data = this.props.form.getFieldsValue()\r\n        // let history = this.context.router.history\r\n        \r\n        // axios.post(\"/users\",data).then((res) =>{\r\n        //     let resMsg = res.data;\r\n            if(data.name === \"1\" && data.password===\"1\"){\r\n                localStorage.setItem('username',data.name)\r\n                // alert(\"登录成功\")\r\n                this.props.onLoginCallback(true);\r\n                // store.dispatch({type:'login',username:data.name})\r\n                // history.push('index');\r\n            }else{\r\n                message.error('用户或密码不正确')\r\n            }\r\n        // })\r\n    }\r\n    render() {\r\n        let top = window.innerHeight/2;\r\n        let left = window.innerWidth/2; \r\n        let message = this.message\r\n        const {getFieldDecorator} = this.props.form;\r\n        return (\r\n            <div className=\"login-wrap\" style={{display:'flex',flex:1,paddingLeft:'30%'\r\n                }}>\r\n                <Form onSubmit={(e)=>this.handleSubmit(e)} className=\"loginForm\">\r\n                    {/* <h3 style={{color:'pray',fontSize:29}}>用户登陆</h3> */}\r\n                    <FormItem>\r\n                        {\r\n                            getFieldDecorator(\r\n                                'name',{\r\n                                    rules:[{required: true, message:'用户名不能为空！'}],\r\n                                    initialValue: ''\r\n                                }\r\n                            )(\r\n                                <Input size=\"large\"  prefix={<Icon type=\"user\"  style={{ color: 'rgba(0,0,0,.5)' }}  />} placeholder=\"请输入用户名\"  />\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        {\r\n                            getFieldDecorator(\r\n                                \"password\",{\r\n                                    rules:[{required: true, message:\"密码不能为空！\",trigger:'blur'}],\r\n                                    initialValue: ''\r\n                                }\r\n                            )(\r\n                                <Input size=\"large\"  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.5)' }} />} type=\"password\" placeholder=\"请输入密码\" />\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem>\r\n                    <Button size=\"large\"  type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" >\r\n                            登陆\r\n                        </Button>\r\n                    </FormItem>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\n// NormalLoginForm.contextTypes = {\r\n//     router: PropTypes.object.isRequired\r\n// };\r\nlet WrapForm = Form.create()(NormalLoginForm)\r\n\r\n// const WrapForms  = connect()(WrapForm)\r\nexport default WrapForm","import React, { Component } from 'react';\r\n// import ReactDOM from 'react-dom';\r\n\r\nimport { browserHistory,  Link } from 'react-router'  //引入路由函数\r\n\r\nimport { Menu, Icon } from 'antd';\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nexport default class Sider extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tkey: 1\r\n\t\t}\r\n\t}\r\n    handleClick = (e) => {\r\n\t\tconsole.log(e)\r\n\t\tthis.props.getValue(e.key,e.item.props.children); \r\n\t}\r\n    render () {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Menu\r\n\t\t\t\t\t\tonClick={this.handleClick}\r\n\t\t\t\t\t\tonChange = {this.getValue}\r\n\t\t\t\t\t\tstyle={{ width: 256,height:'90vh',overflow: 'auto',minWidth:256}}\r\n\t\t\t\t\t\tdefaultSelectedKeys={['1']}\r\n\t\t\t\t\t\tdefaultOpenKeys = {['sub1','sub2','sub3','sub4','sub5','sub10']}\r\n\t\t\t\t\t\tmode=\"inline\"\r\n\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t<SubMenu key=\"sub1\" title={<span><Icon type=\"smile-o\" /><span>Antd 部分UI组件-实践</span></span>}>\r\n\t\t\t\t\t\t\t\t<Menu.Item key=\"1\">\r\n\t\t\t\t\t\t\t\t\t{/* <Link to = {'tabble'}>表格</Link>  */}\r\n\t\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t\t\t<Menu.Item key=\"2\">\r\n\t\t\t\t\t\t\t\t\t{/* <Link to = {'label'}>标签页</Link>  */}\r\n\t\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t\t\t<SubMenu key=\"sub10\" title=\"表单 AND 轮播\">\r\n\t\t\t\t\t\t\t\t\t<Menu.Item key=\"3\">\r\n\t\t\t\t\t\t\t\t\t\t{/* <Link to = {'form'}>表单</Link> */}\r\n\t\t\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t\t\t\t<Menu.Item key=\"4\">\r\n\t\t\t\t\t\t\t\t\t\t{/* <Link to = {'carousel'}>轮播图</Link> */}\r\n\t\t\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t\t\t</SubMenu>\r\n\t\t\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t\t\t{/* <SubMenu key=\"sub2\" title={<span><Icon type=\"frown\" /><span>网络请求-操作-实践</span></span>}>\r\n\t\t\t\t\t\t\t<Menu.Item key=\"5\">\r\n\t\t\t\t\t\t\t\t<Link to = {'shop_home'}>获取商品列表</Link>\r\n\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t</SubMenu>\r\n\t\t\t\t\t\t<SubMenu key=\"sub3\" title={<span><Icon type=\"meh-o\" /><span>插件 之 echarts 图表</span></span>}>\r\n\t\t\t\t\t\t\t<Menu.Item key=\"6\">\r\n\t\t\t\t\t\t\t\t<Link to = {'echarts'}>部分类型图表</Link>\r\n\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t</SubMenu>\r\n\t\t\t\t\t\t<SubMenu key=\"sub4\" title={<span><Icon type=\"meh\" /><span>富文本编辑器 WangEditor</span></span>}>\r\n\t\t\t\t\t\t\t<Menu.Item key=\"7\">\r\n\t\t\t\t\t\t\t\t<Link to = {'editor'}>Editor</Link>\r\n\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t</SubMenu>\r\n\t\t\t\t\t\t<SubMenu key=\"sub5\" title={<span><Icon type=\"frown-o\" /><span>上传</span></span>}>\r\n\t\t\t\t\t\t\t<Menu.Item key=\"8\">\r\n\t\t\t\t\t\t\t\t<Link to = {'select'}>上传图片</Link>\r\n\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t</SubMenu>\r\n\t\t\t\t\t\t<SubMenu key=\"sub6\" title={<span><Icon type=\"frown\" /><span>redux 状态管理</span></span>}>\r\n\t\t\t\t\t\t\t<Menu.Item key=\"8\">\r\n\t\t\t\t\t\t\t<Link to = {'redux'}>Redux</Link>\r\n\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t</SubMenu> */}\r\n\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t);\r\n\t\t\t}\r\n  }","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Layout, Row, Col, Avatar, Input, Menu, Dropdown, Icon, Badge } from 'antd';\r\nimport 'antd/dist/antd.css';  // or 'antd/dist/antd.less'\r\n\r\nimport SiderComponent from './sider'\r\n// import Tooltip from '../component/tooltip'\r\n// import MyNews from '../component/myNews'\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\n// \r\nconst menu = (\r\n    <Menu>\r\n        <Menu.Item>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://blog.csdn.net/HiSen_CSDN\">我的博客</a>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/Hi-Sen\">我的 GitHub</a>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n            {/* <MyNews /> */}\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n            {/* <Tooltip /> */}\r\n        </Menu.Item>\r\n    </Menu>\r\n);\r\n\r\nexport default class Page1 extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: '1',\r\n            valueTxt: '',\r\n        }\r\n    }\r\n\r\n    getValue (val, value) {\r\n        this.setState({\r\n            value: val,\r\n            valueTxt: value\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div style={{ minWidth: '1300px' }}>\r\n                <Layout>\r\n                    <Header style={{ color: '#fff', textAlign: 'center', fontWeight: 'bold' }}>\r\n                        <Row>\r\n                            <Col span={5}>\r\n                               博客\r\n                            </Col>\r\n                            <Col span={8}><Input placeholder=\"请输入你想要的......\" /></Col>\r\n                            <Col span={6}>\r\n                                <Avatar style={{ backgroundColor: '#87d068', marginRight: 20 }} icon=\"user\" />\r\n                                <Dropdown overlay={menu}>\r\n                                    <span className=\"ant-dropdown-link\" href=\"#\" style={{ color: '#fff', cursor: 'pointer' }}>\r\n                                        Hi-Sen <Icon type=\"down\" />\r\n                                    </span>\r\n                                </Dropdown>\r\n                            </Col>\r\n                        </Row>\r\n                    </Header>\r\n                    <Layout>\r\n                        <Sider style={{ color: '#666' }}>\r\n                            <SiderComponent\r\n                                getValue={this.getValue.bind(this)}\r\n                            />\r\n                        </Sider>\r\n                        <Content style={{ marginLeft: '5%', height: '86vh', paddingRight: '2%', overflow: 'auto', textAlign: 'center' }}>\r\n                            {this.props.children}\r\n                        </Content>\r\n                    </Layout>\r\n                    {/* <Footer style={{ backgroundColor: '#001529', position: 'fixed', bottom: 0, width: '100vw', minWidth: '1000px', textAlign: 'center', fontWeight: 'bold', color: '#fff' }}>\r\n                        2018/05/31  - react + Ant Design - gitHub地址：\r\n                        <a href=\"https://github.com/Hi-Sen/React-Antd-demo-one\" target=\"_blank\">https://github.com/Hi-Sen/React-Antd-demo-one</a>\r\n                    </Footer> */}\r\n                </Layout>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from \"react\"\r\nimport { Form, Icon, Input, Button, Checkbox,Layout} from 'antd';\r\nimport LoginForm from './loginForm'\r\nimport Sider from \"../pages/sider\";\r\nimport logo from '../../logo.svg';\r\nimport Page1 from \"../pages\";\r\nclass LoginApp extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            isLogin:false\r\n        }\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    onLoginCallback=(e)=>{\r\n        this.setState({\r\n            isLogin:e\r\n        })\r\n    }\r\n    render() {\r\n        var innerHeight = window.innerHeight;\r\n        if(this.state.isLogin){\r\n            return (   \r\n                <Page1></Page1>\r\n        )\r\n        }else{\r\n            return (  \r\n                <div style={{display:'flex',flex:1,flexDirection:'column',paddingTop:'10%'}}>\r\n\r\n                <img src={logo} style={{display:'flex',flex:1}} className=\"App-logo\" alt=\"logo\" /> \r\n                <LoginForm store={this.props.store} onLoginCallback={this.onLoginCallback}></LoginForm>\r\n                                    \r\n                </div>\r\n        )\r\n        }\r\n\r\n    }\r\n}\r\nexport default LoginApp","import React from 'react';\nimport './App.css';\nimport LoginApp from './components/login/login';\nfunction App() {\n  return (\n    // <Provider store = {store}>\n    <div className=\"App\" >\n      <header className=\"App-header\">\n        <LoginApp ></LoginApp>\n      </header>\n      \n    </div>\n    // </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}